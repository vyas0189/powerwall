permissions:
  contents: read
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-secrets:
    name: Validate Secrets
    runs-on: ubuntu-latest
    
    steps:
    - name: Check required secrets
      run: |
        echo "Checking required secrets..."
        
        if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          echo "‚ùå AWS_ACCESS_KEY_ID secret is missing"
          exit 1
        else
          echo "‚úÖ AWS_ACCESS_KEY_ID is set"
        fi
        
        if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
          echo "‚ùå AWS_SECRET_ACCESS_KEY secret is missing"
          exit 1
        else
          echo "‚úÖ AWS_SECRET_ACCESS_KEY is set"
        fi
        
        if [ -z "${{ secrets.API_KEY }}" ]; then
          echo "‚ùå API_KEY secret is missing"
          exit 1
        else
          echo "‚úÖ API_KEY is set"
        fi
        
        if [ -z "${{ secrets.SITE_ID }}" ]; then
          echo "‚ùå SITE_ID secret is missing"
          exit 1
        else
          echo "‚úÖ SITE_ID is set"
        fi
        
        echo "üéâ All required secrets are configured!"

  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black pytest
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: black --check .
    
    - name: Validate Python files
      run: |
        python -m py_compile morning_config.py
        python -m py_compile evening_config.py

  terraform-check:
    name: Terraform Check
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: terraform
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
    
    - name: Terraform Init
      run: terraform init -backend=false
    
    - name: Terraform Validate
      run: terraform validate